## todo

pin types
Any review


## gc

isenabled is undocumented


## audio

AudioFrame.copyfrom is undocumented
AudioFrame implements some operations that aren't clearly documented (e.g. you can add them, multiple by an integer...)
The current module doc isn't enough to really understand how to use the module.
There's more useful content in the rst doc.

## uart

uart.readinto is misindented
there's a method documented as having been removed, I've omitted it.

## __init__

button.rst is good, the rest needs review
removed (see below) from button_a 

image - type of buffer in second __init__ option
text modified to split across __init__ definitions
"Same as" language is unhelpful.
__sub__ and __div__ added based on examples but not in docs.

microphone - the doc style here is a bit different to elsewhere, might be less good in Pyright?

## micropython

opt_level has @overload with split docs

micropython.schedule is missing from our docs. Why? It is on the device (checked on V2).

## music

lots of necessary docs omitted from module comment
would be no good in a hover or completion

## builtins

### open

Needs revisiting if we want the docs.
We support fewer options but would be good to look at the impl to determine which.
It looks like unknown keyword arguments are accepted without error.


## misc

In waveforms.py

frames = [ None ] * 32

is a problematic initialization pattern for arrays. Can we relax the rules?
Is the pattern widespread?

Are the pin types correct? To review. E.g. music.


## neopixel

Has long but important module docstring with important warnings for the user.
I've removed the images and reproduced it otherwise in full.

Some complication with write/show. Fine for stubs but will need revisiting for docs.

ws2812_write is undocumented (here and in microbit module)
ORDER is undocumented

## pins

get_analog_period_microseconds isn't documented

pin_logo isn't really a pin... it just has:
		CAPACITIVE
		RESISTIVE
		is_touched
		set_touch_mode
how to model this? currently incorrectly a touch pin.

pins need class docs

NO_PULL etc. aren't available on MicroBitDigitalPin. You need to use the instances
to access. Can/should we model this?

py:method::[a-z] shows broken docs

duplicate definition of MicroBitAnalogDigitalPin

get_mode docs need fixing (I've done this)
https://github.com/microbit-foundation/micropython-microbit-v2/blob/eba8995843ebc7246765b364710543c9ffee344a/src/codal_port/microbit_pinmode.c#L97


### machine
	mem16
	mem32
	mem8
are undocumented

## micropython

schedule is undocumented

## os

ilistdir and stat are undocumented

## radio

In the docs and stubs but not on a V2 (V1 not checked):

>>> radio.RATE_250KBIT
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'RATE_250KBIT'